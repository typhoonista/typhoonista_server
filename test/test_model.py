import pickle
import pandas as pd
import numpy as np
import joblib

boeke_model = joblib.load('model_boeke.sav')


# data2 = [
#     [11.3, 291.91, 50.19, 56.49, 775, 80557, 6.73, 176963, 9.508, 118.44, 0.455219453, 0.383993056, 1.535972222, 385.8, 63.23124834],
#     [16.48, 479.57, 47.2, 82.19, 602, 37836, 11.34, 118216, 13.397, 120.72, 0.320058199, 0.535267857, 2.141071429, 26.26, 7.794856102],
#     [6.5, 232.23, 37.28, 33.53, 77, 6116, 2.09, 46095, 14.722, 120.48, 0.132682504, 1.45234375, 5.809375, 23.71, 18.39692608],
#     [0.82, 7.03, 4.76, 5.31, 133, 9860, 3.07, 61313, 18.391, 121.43, 0.160814183, 0.977213542, 3.908854167, 438.65, 11.83423564],
#     [8.73, 182.19, 36.8, 43.56, 316, 38796, 6.09, 111559, 10.644, 125.05, 0.347762171, 0.201367188, 0.80546875, 165.45, 6.040193801],
#     [16.83, 558.75, 39.76, 84.41, 111, 79461, 10.1, 45998, 18.453, 120.91, 1.727488152, 0.696875, 2.7875, 249.62, 12.63308718],
#     [3.23, 38.78, 13.06, 17.71, 36, 41767, 4.77, 34379, 13.884, 121.92, 1.21489863, 0.581770833, 2.327083333, 458.39, 9.879434297],
#     [8.75, 335.6, 34.98, 43.73, 280, 28327, 4.82, 122387, 16.414, 121.58, 0.231454321, 1.077864583, 4.311458333, 216.35, 22.71824758],
#     [4.58, 60.23, 16.51, 24.32, 166, 156834, 7.87, 76270, 16.102, 119.8, 2.056299987, 0.844270833, 3.377083333, 267.5, 6.539223652],
#     [11.92, 352.9, 46.39, 62.15, 494, 1238, 7, 124891, 6.168, 125.35, 0.009912644, 0.045520833, 0.182083333, 111.25, 13.72323668],
#     [10.35, 577.65, 33.71, 50.64, 564, 45357, 6.08, 105675, 7.475, 124.58, 0.429212207, 0.162357955, 0.649431818, 438.88, 23.68113674],
#     [6.2, 214.69, 35.81, 31.5, 60, 18569, 1.58, 42723, 14.043, 121.24, 0.434637081, 0.330208333, 1.320833333, 226.63, 10.04935601],
#     [2.01, 36.56, 18.9, 11.82, 155, 42878, 12.42, 62935, 11.22, 124.86, 0.681306109, 0.3446875, 1.37875, 108.03, 22.29908993],
#     [8.76, 125.03, 35.96, 45.11, 77, 17360, 5.46, 71103, 10.924, 124.71, 0.244152849, 0.289453125, 1.1578125, 290.96, 11.48531551],
#     [3.73, 84.11, 15.02, 21.66, 29, 9164, 1.75, 28128, 9.637, 123.96, 0.325796359, 0.1515625, 0.60625, 130.72, 10.50353797],
#     [0.54, 22.02, 2.1, 3.95, 59, 32897, 3.48, 36022, 15.837, 120.52, 0.91324746, 0.757291667, 3.029166667, 453.18, 15.79028961],
#     [3.62, 51.74, 16.65, 19.89, 180, 41515, 3.09, 67184, 17.916, 121.67, 0.617929864, 1.587673611, 6.350694444, 462.81, 45.78087168],
#     [5.57, 173.12, 19.61, 29.79, 26, 118150, 5.46, 36141, 9.965, 123.44, 3.269140312, 0.2203125, 0.88125, 48.33, 16.54343382],
#     [10.8, 172.67, 30.76, 55.08, 70, 36720, 5.47, 51891, 12.301, 122.05, 0.707637163, 0.256510417, 1.026041667, 249.21, 6.694671174],
#     [20.82, 845.85, 46.25, 105.99, 467, 30646, 5.25, 91243, 15.909, 121.32, 0.335872341, 1.14734375, 4.589375, 448.45, 14.00084429],
#     [5.15, 168.4, 21.72, 27.69, 359, 63532, 4.62, 96959, 16.959, 121.49, 0.655246032, 0.749392361, 2.997569444, 350.77, 71.59777677],
#     [0.51, 28.1, 1.75, 3.87, 95, 10454, 4.77, 50066, 15.506, 120.86, 0.208804378, 0.737326389, 2.949305556, 21.52, 8.500946458],
#     [0.61, 73.46, 2.42, 4.3, 158, 12315, 2.4, 58414, 16.815, 121.67, 0.210822748, 1.06875, 4.275, 252.12, 5.292699177],
#     [5.04, 96.6, 20.01, 26.37, 82, 29570, 6.68, 39478, 9.892, 124.42, 0.749024773, 0.059244792, 0.236979167, 324.95, 43.11299866],
#     [4.27, 60.75, 19.71, 22.87, 146, 10551, 13.21, 130338, 7.52, 122.92, 0.080951066, 0.220138889, 0.880555556, 186.44, 8.58187027],
#     [21.7, 566.71, 60.66, 110.88, 115, 27459, 9.01, 50146, 16.893, 120.57, 0.547581063, 0.766796875, 3.0671875, 155.69, 69.9425635],
#     [9.59, 255.57, 36.05, 48.5, 101, 52822, 4.14, 68863, 10.854, 122.38, 0.767059234, 0.530034722, 2.120138889, 65.7, 17.87429554],
#     [8.77, 98.85, 44.64, 45.62, 134, 82216, 7.15, 142058, 11.386, 124.9, 0.578749525, 0.514192708, 2.056770833, 24.66, 34.73475053],
#     [7.39, 84.66, 28.02, 37.37, 119, 38195, 6.12, 168980, 13.286, 123.84, 0.226032667, 1.123809524, 4.495238095, 238.91, 62.18859846],
#     [2.13, 23.8, 12.14, 12.05, 55, 4294, 2.07, 33314, 18.267, 120.61, 0.128894759, 0.575, 2.3, 473.59, 12.52187788]
# ]

data2 = [11.3, 291.91, 50.19, 56.49, 775, 80557, 6.73, 176963, 9.508, 118.44, 0.455219453, 0.383993056, 1.535972222, 385.8, 63.23124834]




input_data2 = np.array(data2)
# Reshape the 1D array to a 2D array

input_data_2d2 = input_data2.reshape(1, -1)

# Make predictions using the loaded model

prediction2 = boeke_model.predict(input_data_2d2)


print(prediction2)
# for input_data in data2:
#     input_data_np = np.array(input_data)
#     # Reshape the 1D array to a 2D array
#     input_data_2d = input_data_np.reshape(1, -1)

#     # Make predictions using the loaded model
#     prediction = boeke_model.predict(input_data_2d)

#     print(round(prediction.item(),8))