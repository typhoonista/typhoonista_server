import requests

data = {"features": [11.3,291.91,50.19,56.49,775,80557,6.73,176963,9.508,118.44, 0.456,10,24,1,190]}
data2 = {"features": [190,24,10,3285,3.16,1,25]}


response1 = requests.post("https://typhoonista.onrender.com/boeke/predict", json=data)
response2 = requests.post("http://127.0.0.1:5000/typhoonista/predict", json=data2)
# print("boeke tanginamo:",response1.json())
print(response2.json())

# import pickle
# import pandas as pd
# import numpy as np
# import joblib

# boeke_model = joblib.load('STACKED-SVR_RF_FINAL.joblib')

# #wind,24,6,area,yield,distance,price
# # data2 = [
# #     [63.23124834, 1.535972222, 0.383993056, 2870.00, 3.37, 385.8, 25],
# #     [7.794856102, 2.141071429, 0.535267857, 491.00, 4.36, 26.26, 25],
# #     [18.39692608, 5.809375, 1.45234375, 1330.88, 4.42, 23.71, 25],
# #     [11.83423564, 3.908854167, 0.977213542, 5767.00, 4.65, 438.65, 25],
# #     [6.040193801, 0.80546875, 0.201367188, 4710.00, 4.14, 165.45, 25],
# #     [12.63308718, 2.7875, 0.696875, 38.00, 4.79, 249.62, 25],
# #     [9.879434297, 2.327083333, 0.581770833, 100.00, 3.00, 458.39, 25],
# #     [22.71824758, 4.311458333, 1.077864583, 954.88, 3.96, 216.35, 25],
# #     [6.539223652, 3.377083333, 0.844270833, 498.00, 4.11, 267.5, 25],
# #     [13.72323668, 0.182083333, 0.045520833, 662.00, 2.71, 111.25, 25],
# #     [23.68113674, 0.649431818, 0.162357955, 331.00, 3.14, 438.88, 25],
# #     [10.04935601, 1.320833333, 0.330208333, 24.00, 3.76, 226.63, 25],
# #     [22.29908993, 1.37875, 0.3446875, 6606.00, 3.79, 108.03, 25],
# #     [11.48531551, 1.1578125, 0.289453125, 723.00, 3.82, 290.96, 25],
# #     [10.50353797, 0.60625, 0.1515625, 24.00, 2.14, 130.72, 25],
# #     [15.79028961, 3.029166667, 0.757291667, 2540.00, 4.69, 453.18, 25],
# #     [45.78087168, 6.350694444, 1.587673611, 3637.00, 4.66, 462.81, 25],
# #     [16.54343382, 0.88125, 0.2203125, 41.00, 3.40, 48.33, 25],
# #     [6.694671174, 1.026041667, 0.256510417, 230.00, 2.76, 249.21, 25],
# #     [14.00084429, 4.589375, 1.14734375, 334.16, 3.17, 448.45, 25],
# #     [71.59777677, 2.997569444, 0.749392361, 3909.00, 3.45, 350.77, 25],
# #     [8.500946458, 2.949305556, 0.737326389, 7635.68, 7.01, 21.52, 25],
# #     [5.292699177, 4.275, 1.06875, 13754.92, 5.08, 252.12, 25],
# #     [43.11299866, 0.236979167, 0.059244792, 1543.00, 2.88, 324.95, 25],
# #     [8.58187027, 0.880555556, 0.220138889, 668.00, 3.27, 186.44, 25],
# #     [69.9425635, 3.0671875, 0.766796875, 36.00, 6.60, 155.69, 25],
# #     [17.87429554, 2.120138889, 0.530034722, 832.00, 2.30, 65.7, 25],
# #     [34.73475053, 2.056770833, 0.514192708, 757.00, 3.29, 24.66, 25],
# #     [62.18859846, 4.495238095, 1.123809524, 1040.00, 3.80, 238.91, 25],
# #     [12.52187788, 2.3, 0.575, 1838.00, 5.19, 473.59, 25],
# # ]

# data2 =[ 34.23124834, 5.535972222, 3.383993056, 775.00, 3.37, 385.8, 25]
# feature_names = ["windspeed", "rainfall24", "rainfall6", "area", "yield", "distance", "fgprice"]


# input_data2 = np.array(data2)
# # Reshape the 1D array to a 2D array

# input_data_2d2 = input_data2.reshape(1, -1)

# # Make predictions using the loaded model

# prediction2 = boeke_model.predict(input_data_2d2)


# print(prediction2)

# # for input_data in data2:
# #     input_data_df = pd.DataFrame([input_data], columns=feature_names)
    
# #     # Make predictions using the loaded model
# #     prediction = boeke_model.predict(input_data_df)

# #     print(round(prediction.item(),2))